{"version":3,"sources":["logo.svg","component/UserNameComponent.js","component/HeaderComponent.js","component/ProjectDetailComponent.js","component/CustomerNameComponent.js","component/CustomerComponent.js","component/EvenComponent.js","component/OddComponent.js","component/NumbersComponent.js","component/DisplayEmpComponent.js","component/EmpDetailComponent.js","component/AppContainerComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserNameComoponent","this","props","userName","React","Component","HeaderComponent","className","src","logo","alt","ProjectDetailComponent","type","colSpan","CustomerNameComponent","customer","customerID","customerName","customerAddress","CustomerComponent","state","customerDetails","filter","startsWith","includes","map","filterdCuntomer","key","OddComponent","n","EvenComponent","NumbersComponent","numbers","index","DisplayEmpComponent","emp","empId","empName","EMPCOMPANY","EmpDetailComponent","empDetails","AppContainerComponent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.49fe37b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nclass UserNameComoponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <p> Hello { this.props.userName } </p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserNameComoponent;","import React from 'react';\r\nimport logo from '../logo.svg';\r\nimport UserNameComoponent from './UserNameComponent';\r\nclass HeaderComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <div className=\"App-menu\">\r\n                    <span>Home</span>\r\n                    <span>About</span>\r\n                    <span>Service</span>\r\n                    <span>Contact</span>\r\n                </div>\r\n                <div className='user-details'>\r\n                    <UserNameComoponent userName=\"Aryan Halapara\"></UserNameComoponent>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;","import React from 'react';\r\n\r\nclass ProjectDetailComponent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"search-form\">\r\n                    <input type=\"text\"></input>\r\n                    <button>Search</button>\r\n                </form>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Scrum master</th>\r\n                            <th>Team Members</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>1</td>\r\n                            <td>TCI</td>\r\n                            <td>John</td>\r\n                            <td>12</td>\r\n                            <td colSpan='2'>\r\n                                <button>Edit</button>\r\n                                <button>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>2</td>\r\n                            <td>TCI</td>\r\n                            <td>John</td>\r\n                            <td>10</td>\r\n                            <td colSpan='2'>\r\n                                <button>Edit</button>\r\n                                <button>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>3</td>\r\n                            <td>TCI</td>\r\n                            <td>John</td>\r\n                            <td>8</td>\r\n                            <td colSpan='2'>\r\n                                <button>Edit</button>\r\n                                <button>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>4</td>\r\n                            <td>TCI</td>\r\n                            <td>John</td>\r\n                            <td>5</td>\r\n                            <td colSpan='2'>\r\n                                <button>Edit</button>\r\n                                <button>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectDetailComponent;","import React from 'react';\r\n\r\nclass CustomerNameComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.customer.customerID}</td>\r\n                <td>{this.props.customer.customerName}</td>\r\n                <td>{this.props.customer.customerAddress}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomerNameComponent;","import React from 'react';\r\nimport CustomerNameComponent from './CustomerNameComponent';\r\n\r\nclass CustomerComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { customerDetails : [\r\n            {\r\n                customerID: '1',\r\n                customerName: 'Aryan Halapara',\r\n                customerAddress: 'Pune, India'\r\n            },\r\n            {\r\n                customerID: '2',\r\n                customerName: 'Sandip Halapara',\r\n                customerAddress: 'Rajkot, India'\r\n            },\r\n            {\r\n                customerID: '3',\r\n                customerName: 'Aston John',\r\n                customerAddress: 'California, US'\r\n            },\r\n            {\r\n                customerID: '4',\r\n                customerName: 'Smith',\r\n                customerAddress: 'Melbourn, Australia'\r\n            }]\r\n        };\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Customer ID</th>\r\n                        <th>Customer Name</th>\r\n                        <th>Customer Address</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.state.customerDetails.filter((customer) => {\r\n                        return customer.customerName.startsWith('A') && customer.customerAddress.includes('India');\r\n                    }).map((filterdCuntomer) => {\r\n                        return <CustomerNameComponent key={filterdCuntomer.customerName} customer={filterdCuntomer} /> \r\n                    })}\r\n                    {/* {this.state.customerDetails.filter((customer) => {\r\n                        return <CustomerNameComponent key={customer.customerName} customer={customer} />\r\n                    })} */}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomerComponent;","import React from 'react';\r\n\r\nclass OddComponent extends React.Component  {\r\n    render() {\r\n        return (\r\n            <span>  {this.props.n} </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OddComponent;","import React from 'react';\r\n\r\nclass EvenComponent extends React.Component  {\r\n    render() {\r\n        return (\r\n            <span>  {this.props.n} </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EvenComponent;","import React from 'react';\r\nimport OddComponent from './EvenComponent';\r\nimport EvenComponent from './OddComponent';\r\n\r\nclass NumbersComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const numbers = [12, 29, 8, 7, 4, 10, 90, 48, 94, 37, 29, 96, 34, 52, 76, 56, 45, 54, 32, 2, 93, 76]\r\n        this.state = {\r\n            numbers\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div> Odd Numbers\r\n                    {\r\n                        this.state.numbers.map((n, index) => {\r\n                            if (n % 2 === 0) {\r\n                                return <OddComponent key={index} n={n}></OddComponent>\r\n                            }\r\n                        })\r\n                    }\r\n                </div>\r\n                <div> Even Numbers\r\n                    {\r\n                        this.state.numbers.map((n, index) => {\r\n                            if (n % 2 !== 0) {\r\n                                return <EvenComponent key={index} n={n}></EvenComponent>\r\n                            }\r\n                        })\r\n                    }\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumbersComponent;","import React from 'react';\r\n\r\nclass DisplayEmpComponent extends React.Component {\r\n    render() {\r\n        return(\r\n            <tr>\r\n                <td>{this.props.emp.empId}</td>\r\n                <td>{this.props.emp.empName}</td>\r\n                <td>{this.props.EMPCOMPANY}</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DisplayEmpComponent;","import React from 'react';\r\nimport DisplayEmpComponent from './DisplayEmpComponent';\r\n\r\nclass EmpDetailComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const empDetails = [\r\n            {\r\n                empId: '1009200',\r\n                empName: 'Aryan Halapara'\r\n            },\r\n            {\r\n                empId: '1009201',\r\n                empName: 'Omkar Shinde'\r\n            },\r\n            {\r\n                empId: '1009202',\r\n                empName: 'Hardik Solanki'\r\n            }\r\n        ]\r\n        this.state = {\r\n            empDetails\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Employee ID</th>\r\n                        <th>Employee Name</th>\r\n                        <th>Company</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.state.empDetails.map((emp, index) => {\r\n                        return <DisplayEmpComponent\r\n                            key={index}\r\n                            emp={emp}\r\n                            EMPCOMPANY='Yash Technologies Pvt Ltd' />\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmpDetailComponent;","import React from 'react';\r\nimport ProjectDetailComponent from './ProjectDetailComponent';\r\nimport CustomerComponent from './CustomerComponent';\r\nimport NumbersComponent from './NumbersComponent';\r\nimport EmpDetailComponent from './EmpDetailComponent';\r\n\r\nfunction AppContainerComponent() {\r\n  return (\r\n    <div className=\"container\">\r\n        <h3>Project Details</h3>\r\n        <ProjectDetailComponent></ProjectDetailComponent>\r\n        <h3>Q3).Create a React demo to display employee details as EmpId, EmpName, and EmpCompany.Here EmpCompany should be accepted as default value and should get print by default and also need to validate EmpId.</h3>\r\n        <EmpDetailComponent></EmpDetailComponent>\r\n        <h3>Q4).Create a React demo to create an array of numbers and listing all even and odd numbers from the list.</h3>\r\n        <NumbersComponent></NumbersComponent>\r\n        <h3>Q5).Create an array of objects with CustomerID, CustomerName, and CustomerAddress.Extract Customer names starting with ’A’ and Customer address with India.</h3>\r\n        <CustomerComponent></CustomerComponent>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppContainerComponent;\r\n","import React from 'react';\nimport './App.css';\nimport HeaderComponent from './component/HeaderComponent';\nimport AppContainerComponent from './component/AppContainerComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderComponent></HeaderComponent>\n      <AppContainerComponent/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}